{"ast":null,"code":"var _jsxFileName = \"/home/artemchirakhov/Projet1/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n/* global google */\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { InfoWindowF } from \"@react-google-maps/api\";\nimport { useState } from 'react';\nimport { GoogleMap, MarkerF, useLoadScript } from \"@react-google-maps/api\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchField({\n  getNewResult\n}) {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  function updateText(event) {\n    setSearchQuery(event.target.value);\n  }\n  function updateResultWithQuery() {\n    getNewResult(searchQuery);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: updateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateResultWithQuery,\n      children: \" search \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchField, \"4/Qdl0R3tQNJqUS4eMrvY/uMU/4=\");\n_c = SearchField;\nfunction GoogleMapMarks({\n  marks,\n  isOpen,\n  setIsOpen\n}) {\n  _s2();\n  const [mapRef, setMapRef] = useState();\n  const [infoWindowData, setInfoWindowData] = useState();\n  const onMapLoad = map => {\n    setMapRef(map);\n    const bounds = new google.maps.LatLngBounds();\n    marks === null || marks === void 0 ? void 0 : marks.forEach(({\n      lat,\n      lng\n    }) => bounds.extend({\n      lat,\n      lng\n    }));\n    map.fitBounds(bounds);\n  };\n  const handleMarkerClick = (id, lat, lng, info) => {\n    mapRef === null || mapRef === void 0 ? void 0 : mapRef.panTo({\n      lat,\n      lng\n    });\n    setInfoWindowData({\n      id,\n      info\n    });\n    setIsOpen(true);\n  };\n  const center = useMemo(() => ({\n    lat: 18.52043,\n    lng: 73.856743\n  }), []);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerClassName: \"map-container\",\n    onLoad: onMapLoad,\n    onClick: () => setIsOpen(false),\n    children: marks.map(({\n      info,\n      lat,\n      lng\n    }, ind) => /*#__PURE__*/_jsxDEV(MarkerF, {\n      position: {\n        lat,\n        lng\n      },\n      onClick: () => {\n        handleMarkerClick(ind, lat, lng, info);\n      },\n      icon: \"https://avatars.akamai.steamstatic.com/6f8cee28433a1c3c2ddfaaed7609fdbdb995b5a4_medium.jpg\",\n      children: isOpen && (infoWindowData === null || infoWindowData === void 0 ? void 0 : infoWindowData.id) === ind && /*#__PURE__*/_jsxDEV(InfoWindowF, {\n        onCloseClick: () => {\n          setIsOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: infoWindowData.info.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Rating: \", infoWindowData.info.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: infoWindowData.info.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: infoWindowData.info.link,\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }, this);\n}\n_s2(GoogleMapMarks, \"DOaLhWlLeAA8VxjuWaojnaY31Pc=\");\n_c2 = GoogleMapMarks;\nconst markers = {\n  doctor: [{\n    info: {\n      name: \"Billy Jones\",\n      description: \"adghdgfgsfgfgaf\",\n      rating: 1,\n      link: \"ya.ru\"\n    },\n    lat: 18.52043,\n    lng: 73.856743\n  }, {\n    info: {\n      name: \"MD. Popov\",\n      description: \"Greatest Medical Doctor Ever\",\n      rating: 100,\n      link: \"ya.ru\"\n    },\n    lat: 0,\n    lng: 0\n  }],\n  scientist: [{\n    info: {\n      name: \"Albert Einstein\",\n      description: \"Greatest Scientist Ever\",\n      rating: 10,\n      link: \"https://ya.ru\"\n    },\n    lat: 23.52043,\n    lng: 34.856743\n  }]\n};\nfunction App() {\n  _s3();\n  const [sentResults, setSentResults] = useState([]);\n  const [marks, setMarks] = useState(markers.doctor);\n  const [isOpen, setIsOpen] = useState(false);\n  function getNewResult(searchQuery) {\n    setMarks(markers[searchQuery]);\n    setIsOpen(false);\n  }\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyD2LhLsaPLxdu52uAXd3EKJXdNyr3oFwOg\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchField, {\n      getNewResult: getNewResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMapMarks, {\n      marks: marks,\n      isOpen: isOpen,\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"2KXPoPc1ztNAlJjAyFioO6Gp/ko=\", false, function () {\n  return [useLoadScript];\n});\n_c3 = App;\n;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SearchField\");\n$RefreshReg$(_c2, \"GoogleMapMarks\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["logo","InfoWindowF","useState","GoogleMap","MarkerF","useLoadScript","useMemo","jsxDEV","_jsxDEV","SearchField","getNewResult","_s","searchQuery","setSearchQuery","updateText","event","target","value","updateResultWithQuery","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","GoogleMapMarks","marks","isOpen","setIsOpen","_s2","mapRef","setMapRef","infoWindowData","setInfoWindowData","onMapLoad","map","bounds","google","maps","LatLngBounds","forEach","lat","lng","extend","fitBounds","handleMarkerClick","id","info","panTo","center","mapContainerClassName","onLoad","ind","position","icon","onCloseClick","name","rating","description","href","link","_c2","markers","doctor","scientist","App","_s3","sentResults","setSentResults","setMarks","isLoaded","googleMapsApiKey","className","_c3","$RefreshReg$"],"sources":["/home/artemchirakhov/Projet1/my-app/src/App.js"],"sourcesContent":["/* global google */\n\nimport logo from './logo.svg';\nimport './App.css';\nimport {InfoWindowF} from \"@react-google-maps/api\";\nimport {useState} from 'react';\nimport { GoogleMap, MarkerF, useLoadScript } from \"@react-google-maps/api\";\nimport { useMemo } from \"react\";\n\nfunction SearchField({getNewResult}) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  function updateText(event) { setSearchQuery(event.target.value)}\n  function updateResultWithQuery() { getNewResult(searchQuery) }\n\n  return (\n    <div>\n      <input onChange={updateText}/>\n      <button onClick={updateResultWithQuery}> search </button>\n    </div>\n  )\n}\n\nfunction GoogleMapMarks({marks, isOpen, setIsOpen}) {\n  const [mapRef, setMapRef] = useState();\n\n  const [infoWindowData, setInfoWindowData] = useState();\n\n  const onMapLoad = (map) => {\n\n    setMapRef(map);\n\n    const bounds = new google.maps.LatLngBounds();\n\n    marks?.forEach(({ lat, lng }) => bounds.extend({ lat, lng }));\n\n    map.fitBounds(bounds);\n\n  };\n\n  const handleMarkerClick = (id, lat, lng, info) => {\n\n    mapRef?.panTo({ lat, lng });\n\n    setInfoWindowData({ id, info});\n\n    setIsOpen(true);\n\n  };\n\n   const center = useMemo(() => ({ lat: 18.52043, lng: 73.856743 }), []);\n\n  return (<GoogleMap\n\n          mapContainerClassName=\"map-container\"\n\n          onLoad={onMapLoad}\n\n          onClick={() => setIsOpen(false)}\n\n        >\n\n          {marks.map(({ info, lat, lng }, ind) => (\n\n            <MarkerF\n\n              key={ind}\n\n              position={{ lat, lng }}\n\n\n              onClick={() => {\n\n                handleMarkerClick(ind, lat, lng, info);\n\n              }}\n\n              icon={\"https://avatars.akamai.steamstatic.com/6f8cee28433a1c3c2ddfaaed7609fdbdb995b5a4_medium.jpg\"}\n\n            >\n\n              {isOpen && infoWindowData?.id === ind && (\n\n                <InfoWindowF\n\n                  onCloseClick={() => {\n\n                    setIsOpen(false);\n\n                  }}\n\n                >\n                  <div>\n                  <h3>{infoWindowData.info.name}</h3>\n                  <h5>Rating: {infoWindowData.info.rating}</h5>\n                  <p>{infoWindowData.info.description}</p>\n                  <p><a href={infoWindowData.info.link}>Link</a></p></div>\n\n\n                </InfoWindowF>\n\n              )}\n\n            </MarkerF>\n\n          ))}\n\n  </GoogleMap>)\n}\n\nconst markers = {doctor: [{info: {name: \"Billy Jones\", description: \"adghdgfgsfgfgaf\", rating: 1, link: \"ya.ru\"}, lat: 18.52043, lng: 73.856743 },\n{info: {name: \"MD. Popov\", description: \"Greatest Medical Doctor Ever\", rating: 100, link: \"ya.ru\"}, lat: 0, lng: 0 }],\nscientist: [{info: {name: \"Albert Einstein\", description: \"Greatest Scientist Ever\", rating: 10, link: \"https://ya.ru\"}, lat: 23.52043, lng: 34.856743 }]}\nfunction App() {\n  const [sentResults, setSentResults] = useState([]);\n  const [marks, setMarks]  = useState(markers.doctor);\n  const [isOpen, setIsOpen] = useState(false);\n  function getNewResult(searchQuery) {\n    setMarks(markers[searchQuery])\n    setIsOpen(false)}\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyD2LhLsaPLxdu52uAXd3EKJXdNyr3oFwOg\",\n  });\n\n  return (\n    <div className=\"App\">\n      <SearchField getNewResult={getNewResult}/>\n      {!isLoaded ? (\n        <h1>Loading...</h1>\n      ) : (\n        <GoogleMapMarks marks={marks} isOpen={isOpen} setIsOpen={setIsOpen}/>\n\n      )}\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}